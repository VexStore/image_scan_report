{
  "SchemaVersion": 2,
  "ArtifactName": "bash",
  "ArtifactType": "container_image",
  "Metadata": {
    "OS": {
      "Family": "alpine",
      "Name": "3.18.3"
    },
    "ImageID": "sha256:3c04497fad88ca32bf78b3447ca26c703e0d8afc9ed99e233cf575a290a86fc4",
    "DiffIDs": [
      "sha256:4693057ce2364720d39e57e85a5b8e0bd9ac3573716237736d6470ec5b7b7230",
      "sha256:416e5cec5664d37ff7707999dac038d0d097439b5d153dd79c98f1a5c6c39fe7",
      "sha256:a38995705e37b7f49260eff65cf82fd5b7bb197265b3ae3af996f92419756142"
    ],
    "RepoTags": [
      "bash:latest"
    ],
    "RepoDigests": [
      "bash@sha256:d91f283473ba66c94dbd3b2aaab45cef4d67e65eec107481c2357f15f51a48b8"
    ],
    "ImageConfig": {
      "architecture": "amd64",
      "container": "ace9dbd263424e890c96c88ba43e1e5c67f1c07ec6f0009b32ba7f4c880485cd",
      "created": "2023-08-07T20:12:33.978325165Z",
      "docker_version": "20.10.23",
      "history": [
        {
          "created": "2023-08-07T19:20:20Z",
          "created_by": "/bin/sh -c #(nop) ADD file:32ff5e7a78b890996ee4681cc0a26185d3e9acdb4eb1e2aaccb2411f922fed6b in / "
        },
        {
          "created": "2023-08-07T19:20:20Z",
          "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
          "empty_layer": true
        },
        {
          "created": "2023-08-07T20:11:56Z",
          "created_by": "/bin/sh -c #(nop)  ENV _BASH_VERSION=5.2.15",
          "empty_layer": true
        },
        {
          "created": "2023-08-07T20:11:57Z",
          "created_by": "/bin/sh -c #(nop)  ENV _BASH_BASELINE=5.2.15",
          "empty_layer": true
        },
        {
          "created": "2023-08-07T20:11:57Z",
          "created_by": "/bin/sh -c #(nop)  ENV _BASH_BASELINE_PATCH=15",
          "empty_layer": true
        },
        {
          "created": "2023-08-07T20:11:57Z",
          "created_by": "/bin/sh -c #(nop)  ENV _BASH_LATEST_PATCH=15",
          "empty_layer": true
        },
        {
          "created": "2023-08-07T20:12:33Z",
          "created_by": "/bin/sh -c set -eux; \t\tapk add --no-cache --virtual .build-deps \t\tbison \t\tcoreutils \t\tdpkg-dev dpkg \t\tgcc \t\tlibc-dev \t\tmake \t\tncurses-dev \t\tpatch \t\ttar \t; \t\twget -O bash.tar.gz \"https://ftp.gnu.org/gnu/bash/bash-$_BASH_BASELINE.tar.gz\"; \twget -O bash.tar.gz.sig \"https://ftp.gnu.org/gnu/bash/bash-$_BASH_BASELINE.tar.gz.sig\"; \t\t: \"${_BASH_BASELINE_PATCH:=0}\" \"${_BASH_LATEST_PATCH:=0}\"; \tif [ \"$_BASH_LATEST_PATCH\" -gt \"$_BASH_BASELINE_PATCH\" ]; then \t\tmkdir -p bash-patches; \t\tfirst=\"$(printf '%03d' \"$(( _BASH_BASELINE_PATCH + 1 ))\")\"; \t\tlast=\"$(printf '%03d' \"$_BASH_LATEST_PATCH\")\"; \t\tmajorMinor=\"${_BASH_VERSION%.*}\"; \t\tfor patch in $(seq -w \"$first\" \"$last\"); do \t\t\turl=\"https://ftp.gnu.org/gnu/bash/bash-$majorMinor-patches/bash${majorMinor//./}-$patch\"; \t\t\twget -O \"bash-patches/$patch\" \"$url\"; \t\t\twget -O \"bash-patches/$patch.sig\" \"$url.sig\"; \t\tdone; \tfi; \t\tapk add --no-cache --virtual .gpg-deps gnupg; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 7C0135FB088AAF6C66C650B9BB5869F064EA74AB; \tgpg --batch --verify bash.tar.gz.sig bash.tar.gz; \trm bash.tar.gz.sig; \tif [ -d bash-patches ]; then \t\tfor sig in bash-patches/*.sig; do \t\t\tp=\"${sig%.sig}\"; \t\t\tgpg --batch --verify \"$sig\" \"$p\"; \t\t\trm \"$sig\"; \t\tdone; \tfi; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \tapk del --no-network .gpg-deps; \t\tmkdir -p /usr/src/bash; \ttar \t\t--extract \t\t--file=bash.tar.gz \t\t--strip-components=1 \t\t--directory=/usr/src/bash \t; \trm bash.tar.gz; \t\tif [ -d bash-patches ]; then \t\tapk add --no-cache --virtual .patch-deps patch; \t\tfor p in bash-patches/*; do \t\t\tpatch \t\t\t\t--directory=/usr/src/bash \t\t\t\t--input=\"$(readlink -f \"$p\")\" \t\t\t\t--strip=0 \t\t\t; \t\t\trm \"$p\"; \t\tdone; \t\trmdir bash-patches; \t\tapk del --no-network .patch-deps; \tfi; \t\tcd /usr/src/bash; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-readline \t\t--with-curses \t\t--without-bash-malloc \t|| { \t\tcat \u003e\u00262 config.log; \t\tfalse; \t}; \tmake -j \"$(nproc)\"; \tmake install; \tcd /; \trm -r /usr/src/bash; \t\trm -rf \t\t/usr/local/share/doc/bash/*.html \t\t/usr/local/share/info \t\t/usr/local/share/locale \t\t/usr/local/share/man \t; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk add --no-network --virtual .bash-rundeps $runDeps; \tapk del --no-network .build-deps; \t\t[ \"$(which bash)\" = '/usr/local/bin/bash' ]; \tbash --version; \t[ \"$(bash -c 'echo \"${BASH_VERSION%%[^0-9.]*}\"')\" = \"$_BASH_VERSION\" ]; \tbash -c 'help' \u003e /dev/null"
        },
        {
          "created": "2023-08-07T20:12:33Z",
          "created_by": "/bin/sh -c #(nop) COPY file:651b3bebeba8be9162c56b3eb561199905235f3e1c7811232b6c9f48ac333651 in /usr/local/bin/ "
        },
        {
          "created": "2023-08-07T20:12:33Z",
          "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
          "empty_layer": true
        },
        {
          "created": "2023-08-07T20:12:33Z",
          "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
          "empty_layer": true
        }
      ],
      "os": "linux",
      "rootfs": {
        "type": "layers",
        "diff_ids": [
          "sha256:4693057ce2364720d39e57e85a5b8e0bd9ac3573716237736d6470ec5b7b7230",
          "sha256:416e5cec5664d37ff7707999dac038d0d097439b5d153dd79c98f1a5c6c39fe7",
          "sha256:a38995705e37b7f49260eff65cf82fd5b7bb197265b3ae3af996f92419756142"
        ]
      },
      "config": {
        "Cmd": [
          "bash"
        ],
        "Entrypoint": [
          "docker-entrypoint.sh"
        ],
        "Env": [
          "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
          "_BASH_VERSION=5.2.15",
          "_BASH_BASELINE=5.2.15",
          "_BASH_BASELINE_PATCH=15",
          "_BASH_LATEST_PATCH=15"
        ],
        "Image": "sha256:1847b85dbc80c0c28ca846f225b27195b6a8afad22b5a73a47cb915231fdc7db"
      }
    }
  },
  "Results": [
    {
      "Target": "bash (alpine 3.18.3)",
      "Class": "os-pkgs",
      "Type": "alpine"
    }
  ]
}
